---
apiVersion: v1
kind: Template
labels:
  template: "${APP_NAME}${INSTANCE_ID}-api-dc"
metadata:
  name: "${APP_NAME}${INSTANCE_ID}-api-dc"
objects:

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${APP_NAME}${INSTANCE_ID}"
    name: "${APP_NAME}${INSTANCE_ID}-api"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: "${APP_NAME}${INSTANCE_ID}"
      deploymentconfig: "${APP_NAME}${INSTANCE_ID}-api"
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: "${APP_NAME}${INSTANCE_ID}"
    name: "${APP_NAME}${INSTANCE_ID}-api"
  spec:
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      app: "${APP_NAME}${INSTANCE_ID}"
      deploymentconfig: "${APP_NAME}${INSTANCE_ID}-api"
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: "${APP_NAME}${INSTANCE_ID}"
          deploymentconfig: "${APP_NAME}${INSTANCE_ID}-api"
      spec:
        containers:
        - image: "docker-registry.default.svc:5000/${NAMESPACE}/${APP_NAME}${INSTANCE_ID}-api:latest"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: "/api/v1/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: "${APP_NAME}${INSTANCE_ID}-api"
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: "/api/v1/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
          env:
          - name: PORT
            value: "8080"
          - name: CMSG_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: username
                name: email-microsrv-client
          - name: CMSG_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: password
                name: email-microsrv-client
          envFrom:
          - configMapRef:
              name: email-microsrv-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false

parameters:
- name: REPO_NAME
  description: Application repository name
  required: true
  value: nr-email-microservice
- name: SOURCE_REPO_URL
  description: Git Repository URL
  required: true
  value: https://github.com/bcgov/nr-email-microservice.git
- name: SOURCE_REPO_REF
  description: Git Pull Request Reference (i.e. 'pull/CHANGE_ID/head')
  required: true
  value: master
- name: APP_NAME
  description: Application name
  required: true
  value: email-microsrv
- name: INSTANCE_ID
  description: Differentiate instances of microservice (pull request instances vs master), start with a dash to separate from app_name (i.e. '-pr-5' OR '-master')
- name: NAMESPACE
  description: OpenShift namespace containing our email microservice image to deploy (ex. idcqvl-dev)
  required: true
- name: CPU_REQUEST
  description: Requested CPU per pod (in millicores ex. 500m)
  required: true
  value: 500m
- name: MEMORY_REQUEST
  description: Requested Memory per pod (in gigabytes Gi or megabytes Mi ex. 500Mi)
  required: true
  value: 1Gi
- name: CPU_LIMIT
  description: Limit Peak CPU per pod (in millicores ex. 1000m)
  required: true
  value: 1000m
- name: MEMORY_LIMIT
  description: Limit Peak Memory per pod (in gigabytes Gi or megabytes Mi ex. 2Gi)
  required: true
  value: 2Gi
